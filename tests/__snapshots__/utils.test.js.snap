// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`utils buildNodeTree should build tree 1`] = `
Object {
  "children": Array [
    Object {
      "children": Array [
        Object {
          "children": Array [],
          "name": "div",
          "node": <div />,
          "props": Object {
            "testProp": "some prop",
          },
          "state": Object {},
        },
        Object {
          "children": Array [],
          "name": "span",
          "node": <span />,
          "props": Object {
            "testProp": "some prop",
          },
          "state": Object {},
        },
        Object {
          "children": Array [],
          "name": "div",
          "node": <div />,
          "props": Object {
            "testProp": "some prop",
          },
          "state": Object {
            "testState": true,
          },
        },
        Object {
          "children": Array [],
          "name": "div",
          "node": <div />,
          "props": Object {},
          "state": Object {
            "testState": true,
          },
        },
      ],
      "name": "TestWrapper",
      "node": <div />,
      "props": Object {
        "myProps": "test prop",
      },
      "state": Object {
        "initialized": true,
      },
    },
  ],
  "name": undefined,
  "node": undefined,
  "props": Object {},
  "state": Object {},
}
`;

exports[`utils findInTree 1`] = `
Array [
  Object {
    "name": "div",
    "node": <div />,
    "props": Object {
      "testProp": "some prop",
    },
    "state": Object {},
  },
  Object {
    "name": "div",
    "node": <div />,
    "props": Object {
      "testProp": "some prop",
    },
    "state": Object {
      "testState": true,
    },
  },
  Object {
    "name": "div",
    "node": <div />,
    "props": Object {},
    "state": Object {
      "testState": true,
    },
  },
]
`;

exports[`utils findSelectorInTree should correctly use a custom search fn 1`] = `
Array [
  Object {
    "name": "div",
    "node": <div />,
    "props": Object {
      "testProp": "some prop",
    },
    "state": Object {},
  },
  Object {
    "name": "div",
    "node": <div />,
    "props": Object {
      "testProp": "some prop",
    },
    "state": Object {
      "testState": true,
    },
  },
  Object {
    "name": "div",
    "node": <div />,
    "props": Object {},
    "state": Object {
      "testState": true,
    },
  },
]
`;

exports[`utils findSelectorInTree should return all intances of nested selectors 1`] = `
Array [
  Object {
    "name": "span",
    "node": <span />,
    "props": Object {
      "testProp": "some prop",
    },
    "state": Object {},
  },
]
`;
